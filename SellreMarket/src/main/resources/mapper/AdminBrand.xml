<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="com.springlec.base.dao.AdminBrandDao"> 
	
	
	<!-- 2024.02.21 snr : 브랜드 상세 조회하기  -->
	<select id="detail" resultType="com.springlec.base.model.BrandDto">
	
		select bname, status from brand where bname = #{bname} group by bname, status 
	
	</select>
	
	
	<!-- 2024.02.21 snr : 브랜드 수정하기  -->
	<update id="update">
	
		UPDATE brand SET
		bname = #{bname}
		WHERE bname = #{oldBname}
	
	</update>
	
	<!-- 2024.02.22 snr : 브랜드 삭제하기 -->
	<update id="delete">
		UPDATE brand SET STATUS = 0 WHERE  bname = #{bname} 
	</update>
	
	
	<!-- 2024.02.22 snr : 브랜드 등록하기 -->
	<insert id="insert">
		insert into brand (bname, status) values (#{bname}, '1')
	</insert>
	
	<!-- 2024.02.22 snr : 브랜드 상태값 되돌리기 -->
	<update id="updateStatus">
		UPDATE brand SET STATUS = 1 WHERE  bname = #{bname} 
	</update>
	

	<!-- 브랜드 개수 가져오기 -->	
	<select id="boardCount" resultType="Integer"  parameterType="com.springlec.base.model.BrandDto">
		select count(distinct(bname)) from brand;
	</select>
	
	
	<!-- 브랜드 페이지에 맞게 리스트 가져오기  -->
	 <select id="pageList" parameterType="com.springlec.base.model.AdminPageDto" resultType="com.springlec.base.model.BrandDto">
		SELECT bname,
		    CASE
		        WHEN status = 1 THEN '계약중'
		        WHEN status = 0 THEN '계약해지'
		        ELSE NULL
		    END AS status
		FROM (
		    SELECT ROW_NUMBER() OVER (ORDER BY bname) AS num, b.bname, b.status, max(b.brandid) as id
		    FROM brand b group by bname, status
		) AS t
        WHERE num BETWEEN #{pageStart} AND #{pageStart}+14
        order by id desc; 
	</select>
	
	
	<!-- 브랜드명 중복체크 -->
	<select id="checkBrand" resultType="Integer"  parameterType="com.springlec.base.model.BrandDto">
		select count(bname) from brand where bname = #{bname}
	</select> 
	
	
</mapper>