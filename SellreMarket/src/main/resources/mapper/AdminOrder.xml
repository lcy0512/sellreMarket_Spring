<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.springlec.base.dao.AdminOrderDao"> 

	<!-- 입고요청 페이지에 맞게 제품 리스트 가져오기  -->
	 <select id="questList" parameterType="com.springlec.base.model.AdminPageDto" resultType="com.springlec.base.model.AdminOrderDto">
        SELECT 
		    t.productid,
		    t.pname,
		    t.pstock,
		    t.amount,
		    CASE t.status
		        WHEN '0' THEN '판매종료'
		        WHEN '1' THEN '판매중'
		        ELSE ''
		    END AS status
		FROM (
		    SELECT 
		        p.productid, 
		        p.pname, 
		        IFNULL(p.pstock, 0) AS pstock,
		        p.pstock - (SELECT COALESCE(SUM(pur.amount), 0) FROM purchase pur WHERE p.productid = pur.productid) AS amount,
		        p.status,
		        ROW_NUMBER() OVER (ORDER BY p.productid DESC) AS rownum
		    FROM product p
		    LEFT OUTER JOIN purchase pur ON p.productid = pur.productid
		    GROUP BY p.productid
		) AS t
		WHERE t.rownum BETWEEN #{pageStart} AND #{pageStart}+14
		ORDER BY t.rownum;
		        
	</select>
	
	
	<!--입고요청 - 제품 개수 가져오기 -->	
	<select id="listCount" resultType="Integer"  parameterType="com.springlec.base.model.AdminOrderDto">
		select count(productid) from product;   
	</select>
	
	<!-- 입고요청 상세 조회 -->
	<select id="detail" parameterType="com.springlec.base.model.AdminOrderDto">
       SELECT 
        	pname,
        	productid,
            CASE status
		        WHEN '0' THEN '판매종료'
		        WHEN '1' THEN '판매중'
		        ELSE ''
		    END AS status
        FROM product
        WHERE productid = #{productid}
	
	</select>
	
	<!--  입고 요청하기 -->
	<insert id="insertOrder">
		insert into request (rcount, rcomment, rdate, productid) 
		values (#{rcount}, #{rcomment}, now(), #{productid})
	</insert>
	
	<!-- 제품 재고현황에도 수량 update -->
	<update id="insertProduct">
		update product set pstock = (pstock + #{rcount}) where productid = #{productid}
	</update>
	
	
</mapper>